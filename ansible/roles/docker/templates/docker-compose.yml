version: "3.9"
services:
{% for network in networks %}
  nebula_monitor_{{ network.name }}:
    image: "{{ docker_image }}:{{ docker_tag }}"
    container_name: nebula_monitor_{{ network.name }}
    restart: always
    user: nebula
    ports:
      - "{{ network.pprof_port }}:{{ network.pprof_port }}"
    entrypoint: ["./docker-entrypoint.sh", "nebula", "monitor"]
    environment:
      NEBULA_DATABASE_HOST: postgres
      NEBULA_DATABASE_PORT: 5432
      NEBULA_DATABASE_NAME: nebula_{{ network.name }}
      NEBULA_DATABASE_USER: nebula_{{ network.name }}
      NEBULA_DATABASE_PASSWORD: "{{ network.db_password }}"
      NEBULA_PROMETHEUS_PORT: "{{ network.prom_port }}"
      NEBULA_PPROF_PORT: "{{ network.pprof_port }}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      nebula:
{% endfor %}
  postgres:
    image: postgres:13
    container_name: nebula_db
    restart: always
    user: postgres
    ports:
      - "5432:5432"
    volumes:
      - psql_data:/var/lib/postgresql/data
      - "./postgres.init.sh:/docker-entrypoint-initdb.d/postgres.init.sh"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nebula"]
      interval: 10s
      timeout: 5s
      retries: 20
    environment:
      POSTGRES_PASSWORD: {{ db_password }}
      POSTGRES_USER: {{ db_user }}
      POSTGRES_DB: {{ db_name }}
    networks:
      nebula:
  prometheus:
    container_name: nebula_prometheus
    image: prom/prometheus:v2.28.0
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      nebula:
  grafana: # default - user: admin, pw: admin
    container_name: nebula_grafana
    image: grafana/grafana:8.3.1
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana.ini:/etc/grafana/grafana.ini
#       - ./dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    networks:
      nebula:
networks:
  nebula:
    name: nebula
volumes:
  psql_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '{{ db_host_location }}'
  prometheus_data: {}
  grafana_data: {}
