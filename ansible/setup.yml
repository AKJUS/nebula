---
- name: Setup Nebula Host
  hosts: all
  vars_files:
    - ansible.vault
  vars_prompt:
    - name: ssh_public_key
      prompt: "Please paste your SSH public key(s) [~/.ssh/id_rsa.pub] for password-less admin access"
      private: no
      default: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDBmEBOMiwbINECo9x6pwQB5+NkOgkVM9MrXeYHT+BHPBUWkNbM6uMALlQM0Rszx5Di3/xGdmyBB9szmXMpJUCzTK+0sFW/0lZRYBYGvJz257Xe0/tT6FFRHhPknrttjVqucXtj9nT81nBPwU0op1hpPOeYv3eUoh46pv8w0vJwB4FMqknQw3v6zhUrMzzG0zUgXCmSb2p6yuqVXcPwH5GtY3NSBAfNNR7BJ88LTqkrXlb77kUbtRhgZHy5QxAyo6cmgyfTAYYj0HHOjZjNYAa/CyJVF6lXb753oYQdKlDmO7KnTUAi7GDL6gQPYmlbhvmHjTORfzoGI9+dw0T219SeDFop1vgAu1pOdBUUr8cO+3yqE1NdyJTAOiKvHpJbJsEQgnPubf875QBy1s+A4ftjX2b0tGVmKGr+aV8EuDQPNM+aRwPtWMOKTBWX1NfHhsekRo1/FZtpBEh0rH57P9qpkgEVzoewTExghdm47TbkZOn5cDUYA+enlnswboE8stMTLQt4HhXOX2nf0EQJFHhx2R9z1DU1BiD5a+3kBHbphzJCn+MzuX6btMczNBZKTlHzmTbYFUmQ5JD4RhWcAsCBWd5lvkFkT5A6+WxeMePbTDhTJLdOuK/GKcIwyAHR1yLMZ+CDlCudOb5YfEwiOs3nIG4jC9U2JiUltSNYiH2tbw== dennis.trautwein@originstamp.com

  tasks:
    - name: Setting timezone to Europe/Berlin
      timezone:
        name: Europe/Berlin

    - name: Changing root password
      user:
        name: root
        password: "{{ root_password | password_hash('sha512') }}"

    - name: Disabling admin group sudo permissions
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%admin'
        line: "# %admin ALL=(ALL) ALL"
        validate: 'visudo -cf %s'

    - name: Creating docker group
      group:
        name: docker
        state: present

    - name: Adding {{ remote_user_name }} and assign it to groups sudo and docker
      user:
        name: "{{ remote_user_name }}"
        password: "{{ remote_user_password | password_hash('sha512') }}"
        groups: sudo,docker
        shell: /bin/zsh
        append: yes
        state: present
        createhome: yes

    - name: Adding Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Adding Docker apt Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
        update_cache: yes

    - name: Installing basic apt dependencies
      apt:
        pkg:
          - 'apt-transport-https'
          - 'ca-certificates'
          - 'curl'
          - 'software-properties-common'
          - 'fail2ban'
          - 'ufw'
          - 'unattended-upgrades'
          - 'logwatch'
          - 'zsh'
          - 'vim'
          - 'git'
          - 'docker-ce'
          - 'python3-pip'
          - 'python3-dev'
        state: latest
        update_cache: yes
        cache_valid_time: 3600

    - name: Installing python dependencies
      pip:
        name:
          - 'setuptools'
          - 'docker'
          - 'docker-compose'
        state: present

    - name: Enabling UFW logging
      ufw:
        logging: "on"

    - name: Adding allow rules to UFW
      ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
      with_items:
        - port: "3000" # Grafana
          proto: "tcp"

    - name: Rate limit SSH login attempts
      ufw:
        rule: limit
        port: ssh
        proto: tcp

    - name: Enabling UFW
      ufw:
        state: enabled

    - name: Deploying SSH Public Key
      authorized_key:
        user: "{{ remote_user_name }}"
        key: "{{ ssh_public_key }}"
        state: present

    - name: Enabling Public Key Authentication
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^(#\s*)?PubkeyAuthentication\s+no'
        line: "PubkeyAuthentication yes"
        state: present
        backup: yes

    - name: Disabling Password Authentication
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^(#\s*)?PasswordAuthentication\s+yes'
        line: "PasswordAuthentication no"
        state: present
        backup: yes

    - name: Disabling root Login
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^(#\s*)?PermitRootLogin\s+yes'
        line: "PermitRootLogin no"
        state: present
        backup: yes

    - name: Enabling TCP-Forwarding
      blockinfile:
        path: /etc/ssh/sshd_config
        backup: yes
        validate: sshd -t -f %s
        block: |
          Match User {{ remote_user_name }}
            AllowTcpForwarding yes

    - name: Checking SSH configuration
      become: yes
      command: sshd -t
      register: sshd_test
      failed_when: not ( sshd_test.rc == 0 )

    - name: Restarting SSH
      service:
        name: ssh
        state: restarted
